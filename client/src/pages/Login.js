import { useForm, Controller } from 'react-hook-form'
import { Stack, TextField, Box, Container, Button, Typography } from '@mui/material'
import { useAuthContext } from '../providers/auth-provider'

const Login = () => {
  const { handleSubmit, control } = useForm()
  const { handleLogin } = useAuthContext()

  const handleOnSubmit = (data) => {
    handleLogin(data)
  }

  return (
    <Container
      component="main"
      maxWidth="xs"
    >
        <Box sx={{
          marginTop: 8, 
          display: 'flex',
          flexDirection: 'column',  
          alignItems: 'center', 
        }}>
          <Typography component='h1' variant='h5'>Dashboard Login</Typography>
          <Box component='form' onSubmit={handleSubmit(handleOnSubmit)} sx={{mt: 1}}>
              <Controller
                name="apiKey"
                control={control}
                rules={{ required: "API Key is required", minLength: { value: 32, message: 'Must be 32 characters long' }, maxLength: {value: 32, message: 'Must be 32 characters long'} }}
                render={({ field, fieldState: { error } }) => <TextField placeholder='API Key' margin='normal' fullWidth error={!!error} helperText={error ? error.message : null} {...field} />}
              />
              <Controller
                name="apiSecret"
                control={control}
                rules={{ required: "API Secret is required", minLength: { value: 32, message: 'Must be 32 characters long' }, maxLength: {value: 32, message: 'Too many characters. Must be 32 characters long'} }}
                render={({ field, fieldState: { error } }) => <TextField placeholder='API Secret' margin='normal' fullWidth error={!!error} helperText={error ? error.message : null}  {...field} />}
              />
              <Button variant="contained" 
                fullWidth
                variant="contained"
                sx={{ mt: 3, mb: 2 }} 
                type='submit'
              >
                Login
              </Button>
          </Box>
        </Box>
    </Container>

  )

}

export default Login